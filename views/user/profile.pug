extends ../layouts/main

mixin linked_account(name, icon, shortname, userId, token)
  button.btn.btn-default.linked-account.mx-1.my-1(type="button",id=shortname,userId=userId,connected=(token != undefined))
    if icon
      i(class="fa fa-" + icon)
      | &nbsp;<span class="connect">Connect</span><span class="disconnect" style="display: none;">Disconnect</span> #{name}
    else
      | <span class="connect">Connect</span><span class="disconnect" style="display: none;">Disconnect</span> #{name}      

block title
  #{title}
  
mixin displayBridge(bridge)
    // Maybe display something different fro instructors?
    // if bridge.instructionalStaff
    if editable    
      div.float-right
        button.btn.btn-danger.delete-bridge(type="button",data-userId=userId,data-bridge=bridge._id,data-toggle="modal", data-target="#confirm-delete")
          | <i class="fa fa-trash"></i><i class="fa fa-spinner fa-spin" style="display: none;"></i> Delete
    if bridge.contextTitle
      h4 #{bridge.contextTitle}
    else
      h4 Course in a remote Learning Management System
      if bridge.contextLabel || bridge.toolConsumerInstanceName
        small &nbsp;
          if bridge.contextLabel
            | #{bridge.contextLabel}
          if bridge.toolConsumerInstanceName
            | &nbsp;at #{bridge.toolConsumerInstanceName}
      if bridge.lisResultSourcedid && bridge.lisOutcomeServiceUrl && bridge.pointsPossible
        | &nbsp;<span class="badge badge-success badge-pill">#{bridge.pointsPossible} points</span>       
    p
      if bridge.roles.filter( f => f.match( /Instructor/ ) ).length > 0
        <span class="badge badge-default">Instructor</span>&nbsp;            
      else
        if bridge.roles.filter( f => f.match( /TeachingAssistant/ ) ).length > 0
          <span class="badge badge-default">Instructor</span>&nbsp;             
        else    
          for role in bridge.roles 
            <span class="badge badge-default">#{role}</span>&nbsp;
      | in&nbsp;
      a(href=`/${bridge.repository}/${bridge.path}`)
        code #{bridge.repository}/#{bridge.path}
      if bridge.lisResultSourcedid && bridge.lisOutcomeServiceUrl && bridge.dueDate
        | &nbsp;due&nbsp;
        i.fa.fa-clock-o.mr-1      
        time(class="relative-date", datetime=bridge.dueDate)
          | #{bridge.dueDate}
					   
  
block content
  include ../modals/confirm-deletion
  main.container(data-user-id=person._id)
    div.row.mt-3
      .col-sm-3
        .card
          if person.imageUrl
            img.card-img-top.img-fluid(src=person.imageUrl)
          else
            if person.gravatar
              a.img-fluid(href=`http://www.gravatar.com/${person.gravatar}`)
                img.card-img-top.img-fluid(src=`https://secure.gravatar.com/avatar/${person.gravatar}.jpg?d=retro&s=160`)
          .card-block
            if person.displayName && person.displayName.length > 0
              .card-title #{person.displayName}
              p.card-text.text-muted (#{person.name})
            else
              .card-title #{person.name}          
          ul.list-group.list-group-flush(data-toggle="tooltip" data-placement="bottom" title=whyVisible)
            if (!(person.visibility )) || (person.visibility == "none")
              li.list-group-item <i class="fa fa-eye-slash"></i>&nbsp;Visible to&nbsp;<strong>staff</strong>
            if (person.visibility == "users")
              li.list-group-item <i class="fa fa-eye"></i>&nbsp;Visible to other&nbsp;<strong>learners</strong>
            if (person.visibility == "everyone")
              li.list-group-item <i class="fa fa-eye"></i>&nbsp;Visible to&nbsp;<strong>everyone</strong>
            if person.website && person.website.length > 0                     
              li.list-group-item <i class="fa fa-external-link"></i>&nbsp;
                a(href=person.website) #{person.website}
            if person.location && person.location.length > 0           
              li.list-group-item <i class="fa fa-location-arrow"></i>&nbsp;
                a(href="http://maps.google.com/?=q=" + person.location) #{person.location}
            if person.email && person.email.length > 0
              li.list-group-item <i class="fa fa-envelope-o"></i>&nbsp;
                a.email(href=`mailto:${person.email}`) #{person.email}
            if person.birthday                                    
              li.list-group-item <i class="fa fa-birthday-cake"></i>&nbsp;
                time(class="absolute-date", datetime=person.birthday)
                  | #{person.formattedBirthday}
            if person.lastSeen
              li.list-group-item <i class="fa fa-calendar"></i>&nbsp;
                time(class="relative-date", datetime=person.lastSeen)
                  | #{person.lastSeen}
            if person.superuser
              li.list-group-item <i class="fa fa-hashtag"></i>&nbsp;Superuser
            if person.isAuthor
              li.list-group-item <i class="fa fa-pencil"></i>&nbsp;Author
      .col-sm-9
        .row.my-2
          if updated      
            div.alert.alert-success.mr-auto(role="alert")
              strong Updated.&nbsp;
              | The public profile has been changed.
          if editable
            div.ml-auto
              a.btn.btn-primary(role="button", href=`/users/${person._id}/edit`) <i class="fa fa-pencil"></i> Edit                    
        if person.biography && person.biography.length > 0
          .row
              div.card.my-2.w-100
               div.card-header About
               div.card-block
                  p #{person.biography}
        if (person.googleOpenId || person.courseraOAuthId || person.githubId || person.twitterOAuthId)
          .row
              div.card.my-2.w-100            
                div.card-header Linked accounts        
                div.card-block.text-center
                  +linked_account('Google', 'google', 'google', person._id, person.googleOpenId )
                  +linked_account('Coursera', undefined, 'coursera', person._id, person.courseraOAuthId )
                  +linked_account('GitHub', 'github-alt', 'github', person._id, person.githubId )
                  +linked_account('Twitter', 'twitter', 'twitter', person._id, person.twitterOAuthId )
        if bridges.length > 0
          .row
              div.card.my-2.w-100                          
                div.card-header Learning Management Systems
                div.card-block        
                  for bridge in bridges
                    div(id=`bridge-${bridge._id}`)
                      +displayBridge(bridge)
                      if bridges.indexOf(bridge) < (bridges.length - 1)
                        hr
        if (user.superuser) || (user._id.equals(person._id))
          .row
              div.card.my-2.w-100                                        
                div.card-header Secret
                div.card-block
                  div.btn-toolbar.float-right(style="margin-bottom: 15px;")
                    div.btn-group
                      button.btn.btn-primary(type="button",userId=userId,id="create-secret") <i class="fa fa-user-secret"></i>&nbsp;
                        if person.apiKey
                          | Recreate Secret
                        else 
                          | Create Secret
                  p
                      if person.apiKey
                        | Connect to your account using these credentials.
                      else
                        | Create a key and secret in order to connect to your account using command-line tools.
                  dl.row
                    dt.col-md-2.text-right Key
                    dd.col-md-10.select-all#api-key #{person.apiKey}
                    dt.col-md-2.text-right Secret
                    dd.col-md-10.select-all#api-secret #{person.apiSecret}                
                  
